# This logstash conf file reads in my quotes file
# This assumes all quotes are converted to single line pipe separated items.

# Example quotes
# 145. "Beware of the man who won't be bothered with details." - William Feather\nFound on Motivational Quotes of the Day (http://www.quotationspage.com/mqotd.html)|(Added January 28, 2004)
# 145. "Beware of the man who won't be bothered with details." - William Feather\nFound on Motivational Quotes of the Day (http://www.quotationspage.com/mqotd.html)(Added January 28, 2004)
# 1.  "May you live in interesting times." - Chinese Curse\n From Mr. Hofmann's World History class, 1990.  (Sophomore year in high school.)
# 2.  "Woe to him who is not sometimes a Don Quixote, and who never took windmills for giants." - Anatole France\nFrom Ms. Wilson's Honors 12th grade English class, 1992.

# TODO Add source field to easily Id imported quotes 
# TODO figure out how to parse the date correctly
# TODO use date filter to add a date to the record (date read in?)
# TODO rename the message field
# TODO message is default type match.  Need to specify an input type to map to quote or somethinng like that
# TODO Try reading in a text file of all quotes
# TODO figure out how to avoid duplicates

input {
	 stdin { } 
	 
	 # file {
	 #     path => "./Important Quotes 2015.txt"
	 # 		 start_position => "beginning"
	 # }
}

filter {
	multiline {
		pattern => "^%{POSINT}."
		what => "next"
	}
   grok {
     match => { "message" => "%{POSINT:quoteNumber}.\s*%{QUOTEDSTRING:quote}\s*(?<attribution>.*)\n\s*(?<comment>.*)\(Added (?<date_added>.*)%{GREEDYDATA:not_matched}"}
     match => { "message" => "%{POSINT:quoteNumber}.\s*%{QUOTEDSTRING:quote}\s*(?<attribution>.*)\n\s*(?<comment>.*)%{GREEDYDATA:not_matched}"}
   }
}

output {
  stdout { codec => rubydebug }
  stdout { }
  
  elasticsearch { 
	 host => localhost 
	 protocol => "http"
  	 index => "quotes"
  }

  # This will use elasticsearch to store your logs.
  # The 'embedded' option will cause logstash to run the elasticsearch
  # server in the same process, so you don't have to worry about
  # how to download, configure, or run elasticsearch!
  # elasticsearch { embedded => true }
}

# pipe-separated matches
# match => { "message" => "%{POSINT:quoteNumber}.\s*%{QUOTEDSTRING:quote}\s*(?<attribution>.*)\|\s*(?<comment>.*)\(Added (?<date_added>.*)%{GREEDYDATA:not_matched}"}
# match => { "message" => "%{POSINT:quoteNumber}.\s*%{QUOTEDSTRING:quote}\s*(?<attribution>.*)\|\s*(?<comment>.*)%{GREEDYDATA:not_matched}"}
